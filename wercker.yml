box: microsoft/dotnet:2.0-sdk
services:
   - id: postgres
     env:
       POSTGRES_PASSWORD: inteword
       POSTGRES_USER: integrator   
       POSTGRES_DB: locationservice
no-response-timeout: 10
build:
  steps: 
# compile  
    - script:
        name: restore
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet restore
    - script:
        name: build
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet build  

# unit tests          
    - script:
        name: test-restore
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
           dotnet restore
    - script:
        name: test-build
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
          dotnet build
    - script:
        name: test-run
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
          dotnet test

# integration tests
    - script:
        name: integration-migrate
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |           
           export TRANSIENT=false
           export POSTGRES__CSTR="Host=$POSTGRES_PORT_5432_TCP_ADDR"
           export POSTGRES__CSTR="$POSTGRES__CSTR;Username=integrator;Password=inteword;"
           export POSTGRES__CSTR="$POSTGRES__CSTR;Port=$POSTGRES_PORT_5432_TCP_PORT;Database=locationservice"
           dotnet ef database update
    - script:
        name: integration-restore
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |
           dotnet restore
    - script:
        name: integration-build
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |
          dotnet build
    - script:
        name: integration-test
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |          
          dotnet test

# packaging
    - script:
        name: publish
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet publish -o publish  
    - script:
        name: copy binary
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          cp -r . $WERCKER_OUTPUT_DIR/app 
    - script:
        name: copy entrypoint
        code: |
          cp docker_entrypoint.sh $WERCKER_OUTPUT_DIR/app          
    - script:
        name: copy config
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          cp appsettings*json $WERCKER_OUTPUT_DIR/app/publish
          mkdir -p $WERCKER_OUTPUT_DIR/app/publish/app/tmp
deploy:
  steps:
    - internal/docker-push:
        cwd: $WERCKER_OUTPUT_DIR/app
        username: $USERNAME
        password: $PASSWORD
        repository: viiniciusjv/locationservice
        registry: https://registry.hub.docker.com/v2
        entrypoint: "/pipeline/source/app/docker_entrypoint.sh"
        